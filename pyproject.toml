[tool.poetry]
name = "datatools"
version = "0.1.0"
description = "Package contains functions that help prepare dataframes, and can be reutilized from project to project."

license = "MIT"

authors = ["Ingwersen_erik <erik.ingwersen@br.ey.com>"]

readme = "README.rst"  # Markdown files are supported

packages = [{ include = "datatools", from = "src" }]
include = [
    { path = "tests", format = "sdist" }
]

repository = "https://github.com/ingwersen-erik/dev-datatools"
homepage = "https://github.com/ingwersen-erik/dev-datatools"
documentation = "https://ingwersen-erik.github.io/dev-datatools/"

keywords = ["packaging", "poetry"]

[tool.poetry.dependencies]
python = "^3.9"
toml = "^0.9"

# Dependencies with extras
requests = { version = "^2.31", extras = [ "security" ] }

# Python specific dependencies with prereleases allowed
pathlib2 = { version = "^2.2", python = "~2.7", allow-prereleases = true }

# Git dependencies
cleo = { git = "https://github.com/sdispater/cleo.git", branch = "master" }

# Optional dependencies (extras)
pendulum = { version = "^1.4", optional = true }
pandas = "^1.3.4"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted into by apps.
psycopg2 = { version = "^2.7", optional = true }
mysqlclient = { version = "^1.3", optional = true }
versioneer = "^0.21"
prophet = "^1.0.1"
varname = "^0.8.1"
multipledispatch = "^0.6.0"


[tool.poetry.extras]
mysql = ["mysqlclient"]
pgsql = ["psycopg2"]


[tool.poetry.dev-dependencies]
pytest = "^3.0"
pytest-cov = "^2.4"

psycopg2-binary = "^2.9.2"

[tool.poetry.scripts]
my-script = "datatools.main:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
py_version = 36
profile = "black"
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["src"]
extend_skip = ["setup.py"]


[tool.black]
target-version = ['py36']
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
files = "src"

# The following whitelist is used to allow for incremental adoption
# of Mypy. Modules should be removed from this whitelist as and when
# their respective type errors have been addressed. No new modules
# should be added to this whitelist.
# see https://github.com/python-poetry/poetry/pull/4510.

[[tool.mypy.overrides]]
module = [
  'poetry.config.file_config_source',
  'poetry.console.*',
  'poetry.factory.*',
  'poetry.inspection.*',
  'poetry.installation.*',
  'poetry.layouts.*',
  'poetry.mixology.*',
  'poetry.packages.locker',
  'poetry.repositories.installed_repository',
  'poetry.utils.*'
]
ignore_errors = true


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]
